{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Endless Sky data",
	"patterns": [
		{
			"include": "#topLevelKeywords"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#shipKeywords"
		},
		{
			"include": "#attributeKeywords"
		},
		{
			"include": "#outfitKeywords"
		},
		{
			"include": "#weaponKeywords"
		},
		{
			"include": "#missionKeywords"
		},
		{
			"include": "#doubleQuoteStrings"
		},
		{
			"include": "#backtickStrings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		}
	],
	"repository": {
		"topLevelKeywords": {
			"patterns": [
				{
					"name": "keyword.control.endlesssky",
					"match": "^(color|conversation|effect|event|fleet|galaxy|government|hazard|interface|minable|mission|outfit|outfitter|person|phrase|planet|ship|shipyard|start|system|test|test-data|trade|landing message|star|news|rating|category|tip)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.endlesssky",
					"match": "\\b(add|and|or|add attributes|to offer|to complete|to fail|never|has|not|neighbor|to spawn|to despawn|on offer|on complete|on accept|on decline|on defer|on fail|on abort|on visit|on stopover|on waypoint|on enter|dialog phrase|give ship|set condition|clear condition|random|phrase|next|evade|staying|heroic)\\b"
				}
			]
		},
		"doubleQuoteStrings": {
			"name": "string.quoted.double.endlesssky",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.endlesssky",
					"match": "(<)(.*?)(>)",
					"captures": {
						"0": {
							"name": "meta.bold.example"
						},
						"1": {
							"name": "punctuation.definition.bold.example"
						},
						"2": {
							"name": "markup.bold.example"
						},
						"3": {
							"name": "punctuation.definition.bold.example"
						}
					}
				},
				{
					"name": "constant.character.escape.endlesssky",
					"match": "\\\\."
				}
			]
		},
		"backtickStrings": {
			"name": "string.quoted.double.endlesssky",
			"begin": "`",
			"end": "`",
			"patterns": [
				{
					"name": "constant.character.escape.endlesssky",
					"match": "(<)(.*?)(>)",
					"captures": {
						"0": {
							"name": "meta.bold.example"
						},
						"1": {
							"name": "punctuation.definition.bold.example"
						},
						"2": {
							"name": "markup.bold.example"
						},
						"3": {
							"name": "punctuation.definition.bold.example"
						}
					}
				},
				{
					"name": "constant.character.escape.endlesssky",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"name": "constant.numeric",
			"match": "[-]?(([0-9]*[.][0-9]+)|([0-9]+))"
		},
		"operators": {
			"name": "keyword.operator",
			"match": "([=]|[+][=]|[-][=]|[+][+]|[-][-]|[<]|[>])"
		}
	},
	"scopeName": "source.endlesssky"
}